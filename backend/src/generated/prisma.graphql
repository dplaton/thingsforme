# source: https://eu1.prisma.sh/daniel-platon-869681/thingsforme-backend/dev
# timestamp: Thu Apr 25 2019 20:45:04 GMT+0300 (Eastern European Summer Time)

type AggregateUser {
  count: Int!
}

type AggregateWishlist {
  count: Int!
}

type AggregateWishlistItem {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createWishlistItem(data: WishlistItemCreateInput!): WishlistItem!
  createWishlist(data: WishlistCreateInput!): Wishlist!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateWishlistItem(data: WishlistItemUpdateInput!, where: WishlistItemWhereUniqueInput!): WishlistItem
  updateWishlist(data: WishlistUpdateInput!, where: WishlistWhereUniqueInput!): Wishlist
  deleteUser(where: UserWhereUniqueInput!): User
  deleteWishlistItem(where: WishlistItemWhereUniqueInput!): WishlistItem
  deleteWishlist(where: WishlistWhereUniqueInput!): Wishlist
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertWishlistItem(where: WishlistItemWhereUniqueInput!, create: WishlistItemCreateInput!, update: WishlistItemUpdateInput!): WishlistItem!
  upsertWishlist(where: WishlistWhereUniqueInput!, create: WishlistCreateInput!, update: WishlistUpdateInput!): Wishlist!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyWishlistItems(data: WishlistItemUpdateManyMutationInput!, where: WishlistItemWhereInput): BatchPayload!
  updateManyWishlists(data: WishlistUpdateManyMutationInput!, where: WishlistWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyWishlistItems(where: WishlistItemWhereInput): BatchPayload!
  deleteManyWishlists(where: WishlistWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  wishlistItems(where: WishlistItemWhereInput, orderBy: WishlistItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WishlistItem]!
  wishlists(where: WishlistWhereInput, orderBy: WishlistOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Wishlist]!
  user(where: UserWhereUniqueInput!): User
  wishlistItem(where: WishlistItemWhereUniqueInput!): WishlistItem
  wishlist(where: WishlistWhereUniqueInput!): Wishlist
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  wishlistItemsConnection(where: WishlistItemWhereInput, orderBy: WishlistItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WishlistItemConnection!
  wishlistsConnection(where: WishlistWhereInput, orderBy: WishlistOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WishlistConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

enum Role {
  ADMIN
  USER
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  wishlistItem(where: WishlistItemSubscriptionWhereInput): WishlistItemSubscriptionPayload
  wishlist(where: WishlistSubscriptionWhereInput): WishlistSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  roles: [Role!]!
  wishlists(where: WishlistWhereInput, orderBy: WishlistOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Wishlist!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  roles: UserCreaterolesInput
  wishlists: WishlistCreateManyWithoutUserInput
}

input UserCreateOneWithoutWishlistsInput {
  create: UserCreateWithoutWishlistsInput
  connect: UserWhereUniqueInput
}

input UserCreaterolesInput {
  set: [Role!]
}

input UserCreateWithoutWishlistsInput {
  id: ID
  name: String!
  email: String!
  password: String!
  roles: UserCreaterolesInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  roles: [Role!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  roles: UserUpdaterolesInput
  wishlists: WishlistUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  roles: UserUpdaterolesInput
}

input UserUpdateOneRequiredWithoutWishlistsInput {
  create: UserCreateWithoutWishlistsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutWishlistsDataInput
  upsert: UserUpsertWithoutWishlistsInput
}

input UserUpdaterolesInput {
  set: [Role!]
}

input UserUpdateWithoutWishlistsDataInput {
  name: String
  email: String
  password: String
  roles: UserUpdaterolesInput
}

input UserUpsertWithoutWishlistsInput {
  update: UserUpdateWithoutWishlistsDataInput!
  create: UserCreateWithoutWishlistsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  wishlists_every: WishlistWhereInput
  wishlists_some: WishlistWhereInput
  wishlists_none: WishlistWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

type Wishlist implements Node {
  id: ID!
  user: User!
  name: String!
  description: String
  items(where: WishlistItemWhereInput, orderBy: WishlistItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WishlistItem!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type WishlistConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WishlistEdge]!
  aggregate: AggregateWishlist!
}

input WishlistCreateInput {
  id: ID
  name: String!
  description: String
  user: UserCreateOneWithoutWishlistsInput!
  items: WishlistItemCreateManyWithoutWishlistInput
}

input WishlistCreateManyWithoutUserInput {
  create: [WishlistCreateWithoutUserInput!]
  connect: [WishlistWhereUniqueInput!]
}

input WishlistCreateOneWithoutItemsInput {
  create: WishlistCreateWithoutItemsInput
  connect: WishlistWhereUniqueInput
}

input WishlistCreateWithoutItemsInput {
  id: ID
  name: String!
  description: String
  user: UserCreateOneWithoutWishlistsInput!
}

input WishlistCreateWithoutUserInput {
  id: ID
  name: String!
  description: String
  items: WishlistItemCreateManyWithoutWishlistInput
}

"""An edge in a connection."""
type WishlistEdge {
  """The item at the end of the edge."""
  node: Wishlist!

  """A cursor for use in pagination."""
  cursor: String!
}

type WishlistItem implements Node {
  id: ID!
  title: String!
  description: String
  url: String!
  reason: String
  imageUrl: String
  createdAt: DateTime!
  updatedAt: DateTime!
  wishlist: Wishlist!
}

"""A connection to a list of items."""
type WishlistItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WishlistItemEdge]!
  aggregate: AggregateWishlistItem!
}

input WishlistItemCreateInput {
  id: ID
  title: String!
  description: String
  url: String!
  reason: String
  imageUrl: String
  wishlist: WishlistCreateOneWithoutItemsInput!
}

input WishlistItemCreateManyWithoutWishlistInput {
  create: [WishlistItemCreateWithoutWishlistInput!]
  connect: [WishlistItemWhereUniqueInput!]
}

input WishlistItemCreateWithoutWishlistInput {
  id: ID
  title: String!
  description: String
  url: String!
  reason: String
  imageUrl: String
}

"""An edge in a connection."""
type WishlistItemEdge {
  """The item at the end of the edge."""
  node: WishlistItem!

  """A cursor for use in pagination."""
  cursor: String!
}

enum WishlistItemOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  reason_ASC
  reason_DESC
  imageUrl_ASC
  imageUrl_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type WishlistItemPreviousValues {
  id: ID!
  title: String!
  description: String
  url: String!
  reason: String
  imageUrl: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input WishlistItemScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [WishlistItemScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [WishlistItemScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WishlistItemScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  reason: String

  """All values that are not equal to given value."""
  reason_not: String

  """All values that are contained in given list."""
  reason_in: [String!]

  """All values that are not contained in given list."""
  reason_not_in: [String!]

  """All values less than the given value."""
  reason_lt: String

  """All values less than or equal the given value."""
  reason_lte: String

  """All values greater than the given value."""
  reason_gt: String

  """All values greater than or equal the given value."""
  reason_gte: String

  """All values containing the given string."""
  reason_contains: String

  """All values not containing the given string."""
  reason_not_contains: String

  """All values starting with the given string."""
  reason_starts_with: String

  """All values not starting with the given string."""
  reason_not_starts_with: String

  """All values ending with the given string."""
  reason_ends_with: String

  """All values not ending with the given string."""
  reason_not_ends_with: String
  imageUrl: String

  """All values that are not equal to given value."""
  imageUrl_not: String

  """All values that are contained in given list."""
  imageUrl_in: [String!]

  """All values that are not contained in given list."""
  imageUrl_not_in: [String!]

  """All values less than the given value."""
  imageUrl_lt: String

  """All values less than or equal the given value."""
  imageUrl_lte: String

  """All values greater than the given value."""
  imageUrl_gt: String

  """All values greater than or equal the given value."""
  imageUrl_gte: String

  """All values containing the given string."""
  imageUrl_contains: String

  """All values not containing the given string."""
  imageUrl_not_contains: String

  """All values starting with the given string."""
  imageUrl_starts_with: String

  """All values not starting with the given string."""
  imageUrl_not_starts_with: String

  """All values ending with the given string."""
  imageUrl_ends_with: String

  """All values not ending with the given string."""
  imageUrl_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type WishlistItemSubscriptionPayload {
  mutation: MutationType!
  node: WishlistItem
  updatedFields: [String!]
  previousValues: WishlistItemPreviousValues
}

input WishlistItemSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [WishlistItemSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [WishlistItemSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WishlistItemSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: WishlistItemWhereInput
}

input WishlistItemUpdateInput {
  title: String
  description: String
  url: String
  reason: String
  imageUrl: String
  wishlist: WishlistUpdateOneRequiredWithoutItemsInput
}

input WishlistItemUpdateManyDataInput {
  title: String
  description: String
  url: String
  reason: String
  imageUrl: String
}

input WishlistItemUpdateManyMutationInput {
  title: String
  description: String
  url: String
  reason: String
  imageUrl: String
}

input WishlistItemUpdateManyWithoutWishlistInput {
  create: [WishlistItemCreateWithoutWishlistInput!]
  connect: [WishlistItemWhereUniqueInput!]
  set: [WishlistItemWhereUniqueInput!]
  disconnect: [WishlistItemWhereUniqueInput!]
  delete: [WishlistItemWhereUniqueInput!]
  update: [WishlistItemUpdateWithWhereUniqueWithoutWishlistInput!]
  updateMany: [WishlistItemUpdateManyWithWhereNestedInput!]
  deleteMany: [WishlistItemScalarWhereInput!]
  upsert: [WishlistItemUpsertWithWhereUniqueWithoutWishlistInput!]
}

input WishlistItemUpdateManyWithWhereNestedInput {
  where: WishlistItemScalarWhereInput!
  data: WishlistItemUpdateManyDataInput!
}

input WishlistItemUpdateWithoutWishlistDataInput {
  title: String
  description: String
  url: String
  reason: String
  imageUrl: String
}

input WishlistItemUpdateWithWhereUniqueWithoutWishlistInput {
  where: WishlistItemWhereUniqueInput!
  data: WishlistItemUpdateWithoutWishlistDataInput!
}

input WishlistItemUpsertWithWhereUniqueWithoutWishlistInput {
  where: WishlistItemWhereUniqueInput!
  update: WishlistItemUpdateWithoutWishlistDataInput!
  create: WishlistItemCreateWithoutWishlistInput!
}

input WishlistItemWhereInput {
  """Logical AND on all given filters."""
  AND: [WishlistItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [WishlistItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WishlistItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  reason: String

  """All values that are not equal to given value."""
  reason_not: String

  """All values that are contained in given list."""
  reason_in: [String!]

  """All values that are not contained in given list."""
  reason_not_in: [String!]

  """All values less than the given value."""
  reason_lt: String

  """All values less than or equal the given value."""
  reason_lte: String

  """All values greater than the given value."""
  reason_gt: String

  """All values greater than or equal the given value."""
  reason_gte: String

  """All values containing the given string."""
  reason_contains: String

  """All values not containing the given string."""
  reason_not_contains: String

  """All values starting with the given string."""
  reason_starts_with: String

  """All values not starting with the given string."""
  reason_not_starts_with: String

  """All values ending with the given string."""
  reason_ends_with: String

  """All values not ending with the given string."""
  reason_not_ends_with: String
  imageUrl: String

  """All values that are not equal to given value."""
  imageUrl_not: String

  """All values that are contained in given list."""
  imageUrl_in: [String!]

  """All values that are not contained in given list."""
  imageUrl_not_in: [String!]

  """All values less than the given value."""
  imageUrl_lt: String

  """All values less than or equal the given value."""
  imageUrl_lte: String

  """All values greater than the given value."""
  imageUrl_gt: String

  """All values greater than or equal the given value."""
  imageUrl_gte: String

  """All values containing the given string."""
  imageUrl_contains: String

  """All values not containing the given string."""
  imageUrl_not_contains: String

  """All values starting with the given string."""
  imageUrl_starts_with: String

  """All values not starting with the given string."""
  imageUrl_not_starts_with: String

  """All values ending with the given string."""
  imageUrl_ends_with: String

  """All values not ending with the given string."""
  imageUrl_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  wishlist: WishlistWhereInput
}

input WishlistItemWhereUniqueInput {
  id: ID
}

enum WishlistOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type WishlistPreviousValues {
  id: ID!
  name: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input WishlistScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [WishlistScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [WishlistScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WishlistScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type WishlistSubscriptionPayload {
  mutation: MutationType!
  node: Wishlist
  updatedFields: [String!]
  previousValues: WishlistPreviousValues
}

input WishlistSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [WishlistSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [WishlistSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WishlistSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: WishlistWhereInput
}

input WishlistUpdateInput {
  name: String
  description: String
  user: UserUpdateOneRequiredWithoutWishlistsInput
  items: WishlistItemUpdateManyWithoutWishlistInput
}

input WishlistUpdateManyDataInput {
  name: String
  description: String
}

input WishlistUpdateManyMutationInput {
  name: String
  description: String
}

input WishlistUpdateManyWithoutUserInput {
  create: [WishlistCreateWithoutUserInput!]
  connect: [WishlistWhereUniqueInput!]
  set: [WishlistWhereUniqueInput!]
  disconnect: [WishlistWhereUniqueInput!]
  delete: [WishlistWhereUniqueInput!]
  update: [WishlistUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [WishlistUpdateManyWithWhereNestedInput!]
  deleteMany: [WishlistScalarWhereInput!]
  upsert: [WishlistUpsertWithWhereUniqueWithoutUserInput!]
}

input WishlistUpdateManyWithWhereNestedInput {
  where: WishlistScalarWhereInput!
  data: WishlistUpdateManyDataInput!
}

input WishlistUpdateOneRequiredWithoutItemsInput {
  create: WishlistCreateWithoutItemsInput
  connect: WishlistWhereUniqueInput
  update: WishlistUpdateWithoutItemsDataInput
  upsert: WishlistUpsertWithoutItemsInput
}

input WishlistUpdateWithoutItemsDataInput {
  name: String
  description: String
  user: UserUpdateOneRequiredWithoutWishlistsInput
}

input WishlistUpdateWithoutUserDataInput {
  name: String
  description: String
  items: WishlistItemUpdateManyWithoutWishlistInput
}

input WishlistUpdateWithWhereUniqueWithoutUserInput {
  where: WishlistWhereUniqueInput!
  data: WishlistUpdateWithoutUserDataInput!
}

input WishlistUpsertWithoutItemsInput {
  update: WishlistUpdateWithoutItemsDataInput!
  create: WishlistCreateWithoutItemsInput!
}

input WishlistUpsertWithWhereUniqueWithoutUserInput {
  where: WishlistWhereUniqueInput!
  update: WishlistUpdateWithoutUserDataInput!
  create: WishlistCreateWithoutUserInput!
}

input WishlistWhereInput {
  """Logical AND on all given filters."""
  AND: [WishlistWhereInput!]

  """Logical OR on all given filters."""
  OR: [WishlistWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WishlistWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  user: UserWhereInput
  items_every: WishlistItemWhereInput
  items_some: WishlistItemWhereInput
  items_none: WishlistItemWhereInput
}

input WishlistWhereUniqueInput {
  id: ID
}
